<?xml version='1.0' encoding='UTF-8'?>
<DEFECTS><DEFECT><SFA><FILEPATH>d:\oa\tabctrlsource\</FILEPATH><FILENAME>customtabctrl.cpp</FILENAME><LINE>742</LINE><COLUMN>8</COLUMN></SFA><DEFECTCODE>6246</DEFECTCODE><DESCRIPTION>“pOldPen”的局部声明遮蔽了外部作用域中具有相同名称的声明。有关其他信息，请参见此前位于“732”行(“d:\oa\tabctrlsource\customtabctrl.cpp”中)的声明。</DESCRIPTION><FUNCTION>CCustomTabCtrl::OnPaint</FUNCTION><DECORATED>?OnPaint@CCustomTabCtrl@@IAEXXZ</DECORATED><FUNCLINE>375</FUNCLINE><PATH><SFA><FILEPATH>d:\oa\tabctrlsource\</FILEPATH><FILENAME>customtabctrl.cpp</FILENAME><LINE>732</LINE><COLUMN>7</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>d:\oa\tabctrlsource\</FILEPATH><FILENAME>customtabctrl.cpp</FILENAME><LINE>762</LINE><COLUMN>8</COLUMN></SFA><DEFECTCODE>6246</DEFECTCODE><DESCRIPTION>“pts”的局部声明遮蔽了外部作用域中具有相同名称的声明。有关其他信息，请参见此前位于“616”行(“d:\oa\tabctrlsource\customtabctrl.cpp”中)的声明。</DESCRIPTION><FUNCTION>CCustomTabCtrl::OnPaint</FUNCTION><DECORATED>?OnPaint@CCustomTabCtrl@@IAEXXZ</DECORATED><FUNCLINE>375</FUNCLINE><PATH><SFA><FILEPATH>d:\oa\tabctrlsource\</FILEPATH><FILENAME>customtabctrl.cpp</FILENAME><LINE>616</LINE><COLUMN>8</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>d:\oa\tabctrlsource\</FILEPATH><FILENAME>customtabctrl.cpp</FILENAME><LINE>870</LINE><COLUMN>38</COLUMN></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>考虑使用“GetTickCount64”而不是“GetTickCount”。原因:  GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION><FUNCTION>CCustomTabCtrl::ProcessLButtonDown</FUNCTION><DECORATED>?ProcessLButtonDown@CCustomTabCtrl@@AAEHHIVCPoint@@@Z</DECORATED><FUNCLINE>856</FUNCLINE><PATH/></DEFECT><DEFECT><SFA><FILEPATH>d:\oa\tabctrlsource\</FILEPATH><FILENAME>customtabctrl.cpp</FILENAME><LINE>880</LINE><COLUMN>38</COLUMN></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>考虑使用“GetTickCount64”而不是“GetTickCount”。原因:  GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION><FUNCTION>CCustomTabCtrl::ProcessLButtonDown</FUNCTION><DECORATED>?ProcessLButtonDown@CCustomTabCtrl@@AAEHHIVCPoint@@@Z</DECORATED><FUNCLINE>856</FUNCLINE><PATH/></DEFECT><DEFECT><SFA><FILEPATH>d:\oa\tabctrlsource\</FILEPATH><FILENAME>customtabctrl.cpp</FILENAME><LINE>890</LINE><COLUMN>38</COLUMN></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>考虑使用“GetTickCount64”而不是“GetTickCount”。原因:  GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION><FUNCTION>CCustomTabCtrl::ProcessLButtonDown</FUNCTION><DECORATED>?ProcessLButtonDown@CCustomTabCtrl@@AAEHHIVCPoint@@@Z</DECORATED><FUNCLINE>856</FUNCLINE><PATH/></DEFECT><DEFECT><SFA><FILEPATH>d:\oa\tabctrlsource\</FILEPATH><FILENAME>customtabctrl.cpp</FILENAME><LINE>900</LINE><COLUMN>38</COLUMN></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>考虑使用“GetTickCount64”而不是“GetTickCount”。原因:  GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION><FUNCTION>CCustomTabCtrl::ProcessLButtonDown</FUNCTION><DECORATED>?ProcessLButtonDown@CCustomTabCtrl@@AAEHHIVCPoint@@@Z</DECORATED><FUNCLINE>856</FUNCLINE><PATH/></DEFECT><DEFECT><SFA><FILEPATH>d:\oa\tabctrlsource\</FILEPATH><FILENAME>customtabctrl.cpp</FILENAME><LINE>1405</LINE><COLUMN>50</COLUMN></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>考虑使用“GetTickCount64”而不是“GetTickCount”。原因:  GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION><FUNCTION>CCustomTabCtrl::OnTimer</FUNCTION><DECORATED>?OnTimer@CCustomTabCtrl@@IAEXI@Z</DECORATED><FUNCLINE>1400</FUNCLINE><PATH/></DEFECT><DEFECT><SFA><FILEPATH>d:\oa\tabctrlsource\</FILEPATH><FILENAME>customtabctrl.cpp</FILENAME><LINE>1410</LINE><COLUMN>38</COLUMN></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>考虑使用“GetTickCount64”而不是“GetTickCount”。原因:  GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION><FUNCTION>CCustomTabCtrl::OnTimer</FUNCTION><DECORATED>?OnTimer@CCustomTabCtrl@@IAEXI@Z</DECORATED><FUNCLINE>1400</FUNCLINE><PATH/></DEFECT><DEFECT><SFA><FILEPATH>d:\oa\tabctrlsource\</FILEPATH><FILENAME>customtabctrl.cpp</FILENAME><LINE>1414</LINE><COLUMN>49</COLUMN></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>考虑使用“GetTickCount64”而不是“GetTickCount”。原因:  GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION><FUNCTION>CCustomTabCtrl::OnTimer</FUNCTION><DECORATED>?OnTimer@CCustomTabCtrl@@IAEXI@Z</DECORATED><FUNCLINE>1400</FUNCLINE><PATH/></DEFECT><DEFECT><SFA><FILEPATH>d:\oa\tabctrlsource\</FILEPATH><FILENAME>customtabctrl.cpp</FILENAME><LINE>1419</LINE><COLUMN>38</COLUMN></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>考虑使用“GetTickCount64”而不是“GetTickCount”。原因:  GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION><FUNCTION>CCustomTabCtrl::OnTimer</FUNCTION><DECORATED>?OnTimer@CCustomTabCtrl@@IAEXI@Z</DECORATED><FUNCLINE>1400</FUNCLINE><PATH/></DEFECT><DEFECT><SFA><FILEPATH>d:\oa\tabctrlsource\</FILEPATH><FILENAME>customtabctrl.cpp</FILENAME><LINE>1423</LINE><COLUMN>49</COLUMN></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>考虑使用“GetTickCount64”而不是“GetTickCount”。原因:  GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION><FUNCTION>CCustomTabCtrl::OnTimer</FUNCTION><DECORATED>?OnTimer@CCustomTabCtrl@@IAEXI@Z</DECORATED><FUNCLINE>1400</FUNCLINE><PATH/></DEFECT><DEFECT><SFA><FILEPATH>d:\oa\tabctrlsource\</FILEPATH><FILENAME>customtabctrl.cpp</FILENAME><LINE>1428</LINE><COLUMN>38</COLUMN></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>考虑使用“GetTickCount64”而不是“GetTickCount”。原因:  GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION><FUNCTION>CCustomTabCtrl::OnTimer</FUNCTION><DECORATED>?OnTimer@CCustomTabCtrl@@IAEXI@Z</DECORATED><FUNCLINE>1400</FUNCLINE><PATH/></DEFECT><DEFECT><SFA><FILEPATH>d:\oa\tabctrlsource\</FILEPATH><FILENAME>customtabctrl.cpp</FILENAME><LINE>1431</LINE><COLUMN>49</COLUMN></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>考虑使用“GetTickCount64”而不是“GetTickCount”。原因:  GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION><FUNCTION>CCustomTabCtrl::OnTimer</FUNCTION><DECORATED>?OnTimer@CCustomTabCtrl@@IAEXI@Z</DECORATED><FUNCLINE>1400</FUNCLINE><PATH/></DEFECT><DEFECT><SFA><FILEPATH>d:\oa\tabctrlsource\</FILEPATH><FILENAME>customtabctrl.cpp</FILENAME><LINE>1436</LINE><COLUMN>38</COLUMN></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>考虑使用“GetTickCount64”而不是“GetTickCount”。原因:  GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION><FUNCTION>CCustomTabCtrl::OnTimer</FUNCTION><DECORATED>?OnTimer@CCustomTabCtrl@@IAEXI@Z</DECORATED><FUNCLINE>1400</FUNCLINE><PATH/></DEFECT></DEFECTS>